{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/book/book.component.css","webpack:///./src/app/book/book.component.html","webpack:///./src/app/book/book.component.ts","webpack:///./src/app/child.component.ts","webpack:///./src/app/child1.component.ts","webpack:///./src/app/contact-detail/contact-detail.component.css","webpack:///./src/app/contact-detail/contact-detail.component.html","webpack:///./src/app/contact-detail/contact-detail.component.ts","webpack:///./src/app/contact-detail/contact-detail.module.ts","webpack:///./src/app/contacts/contacts.component.css","webpack:///./src/app/contacts/contacts.component.html","webpack:///./src/app/contacts/contacts.component.ts","webpack:///./src/app/contacts/contacts.module.ts","webpack:///./src/app/dynamic-form/dynamic-form.component.css","webpack:///./src/app/dynamic-form/dynamic-form.component.html","webpack:///./src/app/dynamic-form/dynamic-form.component.ts","webpack:///./src/app/ip.component.ts","webpack:///./src/app/ip.service.ts","webpack:///./src/app/list-person/list-person.component.css","webpack:///./src/app/list-person/list-person.component.html","webpack:///./src/app/list-person/list-person.component.ts","webpack:///./src/app/page-notfound/page-notfound.component.css","webpack:///./src/app/page-notfound/page-notfound.component.html","webpack:///./src/app/page-notfound/page-notfound.component.ts","webpack:///./src/app/parent.component.ts","webpack:///./src/app/parent1.component.ts","webpack:///./src/app/person/person.component.css","webpack:///./src/app/person/person.component.html","webpack:///./src/app/person/person.component.ts","webpack:///./src/app/sign-in/sign-in.component.html","webpack:///./src/app/sign-in/sign-in.component.ts","webpack:///./src/app/sign-in/sign-in.service.ts","webpack:///./src/app/sign-up/sign-up.component.css","webpack:///./src/app/sign-up/sign-up.component.html","webpack:///./src/app/sign-up/sign-up.component.ts","webpack:///./src/app/structure/structure.component.css","webpack:///./src/app/structure/structure.component.html","webpack:///./src/app/structure/structure.component.ts","webpack:///./src/app/user-form/user-form.component.css","webpack:///./src/app/user-form/user-form.component.html","webpack:///./src/app/user-form/user-form.component.ts","webpack:///./src/app/weather/weather.component.css","webpack:///./src/app/weather/weather.component.html","webpack:///./src/app/weather/weather.component.ts","webpack:///./src/app/weather/weather.service.ts","webpack:///./src/app/word/word.component.css","webpack:///./src/app/word/word.component.html","webpack:///./src/app/word/word.component.ts","webpack:///./src/app/words/words.component.css","webpack:///./src/app/words/words.component.html","webpack:///./src/app/words/words.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';//de goi trong /detail/1/Trung/...\r\nimport { ContactModule } from './contacts/contacts.module';\r\nimport { ContactDetailModule } from './contact-detail/contact-detail.module'; \r\n\r\nimport { PageNotfoundComponent } from './page-notfound/page-notfound.component';\r\nconst routesConfig : Routes = [\r\n  { path: '', redirectTo:'contacts', pathMatch:'full'},\r\n  { path: '**', component: PageNotfoundComponent}\r\n];\r\n@NgModule({\r\n  imports:[ \r\n    ContactModule,\r\n    ContactDetailModule,\r\n    RouterModule.forRoot(routesConfig),\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    PageNotfoundComponent\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {}","module.exports = \"\"","module.exports = \"<a routerLink=\\\"/contacts\\\">Contacts</a> &nbsp;\\r\\n<a routerLink=\\\"/detail\\\">Details</a>\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Welcome to First Angular';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { WordComponent } from './word/word.component';\nimport { BookComponent } from './book/book.component';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { StructureComponent } from './structure/structure.component';\nimport { WordsComponent } from './words/words.component';\nimport { PersonComponent } from './person/person.component';\nimport { ListPersonComponent } from './list-person/list-person.component';\nimport { ParentComponent } from './parent.component';\nimport { ChildComponent } from './child.component';\nimport { Parent1Component } from './parent1.component';\nimport { Child1Component } from './child1.component';\nimport { IpComponent } from './ip.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { IpService } from './ip.service';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { DynamicFormComponent } from './dynamic-form/dynamic-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WordComponent,\n    BookComponent,\n    UserFormComponent,\n    StructureComponent,\n    WordsComponent,\n    PersonComponent,\n    ListPersonComponent,\n    ParentComponent,\n    ChildComponent,\n    Parent1Component,\n    Child1Component,\n    IpComponent,\n    WeatherComponent,\n    SignInComponent,\n    SignUpComponent,\n    DynamicFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AppRoutingModule\n  ],\n  providers: [IpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  welcome to book component\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-child',\r\n  template: `\r\n    <button (click)=\"addNumber()\" class=\"btn btn-info\">Add</button>\r\n    &nbsp;\r\n    <button (click)=\"subNumber()\" class=\"btn btn-warning\">Sub</button>\r\n  `\r\n})\r\nexport class ChildComponent{\r\n  @Output() myClick = new EventEmitter<boolean>();\r\n  addNumber(){\r\n    this.myClick.emit(true); //emit de chay myclick\r\n  }\r\n  subNumber(){\r\n    this.myClick.emit(false);\r\n  }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-child1',\r\n  template: `\r\n     <h3>{{ value }}</h3>\r\n  `\r\n})\r\n\r\nexport class Child1Component{\r\n  value = 0;\r\n}","module.exports = \"\"","module.exports = \"<p>Chi tiết</p>\\n<p>{{ name }}</p>\\n<p>{{ phoneNumber}}</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n@Component({\n  selector: 'app-contact-detail',\n  templateUrl: './contact-detail.component.html',\n  styleUrls: ['./contact-detail.component.css']\n})\nexport class ContactDetailComponent implements OnInit {\n  name = '';\n  phoneNumber= '';\n  constructor(private route: ActivatedRoute){}\n  \n  ngOnInit() {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      const id =  params.get('id');\n      this.name = params.get('name');\n      this.phoneNumber = params.get('phoneNumber');\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule} from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ContactDetailComponent } from './contact-detail.component'\r\n\r\nconst routesConfig : Routes = [\r\n  { path: 'detail', component: ContactDetailComponent  },\r\n  { path: 'detail/:id/:name/:phoneNumber', component: ContactDetailComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routesConfig)\r\n  ],\r\n  declarations: [ContactDetailComponent]\r\n})\r\n\r\nexport class ContactDetailModule {}","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let contact of contacts\\\">\\n  <a routerLink=\\\"/detail/{{ contact.id }}/{{ contact.name }}/{{ contact.phoneNumber }}\\\">{{ contact.name }}</a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n  contacts = [\n    {id : 1, name: 'Trung', phoneNumber: '0966581498'},\n    {id : 2, name: 'Thu', phoneNumber: '01498'},\n    {id : 3, name: 'Hieu', phoneNumber: '096'},\n    {id : 4, name: 'Thao', phoneNumber: '0898'}\n  ];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule} from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ContactsComponent } from './contacts.component';\r\n\r\nconst routesConfig : Routes = [\r\n  { path: 'contacts', component: ContactsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routesConfig)\r\n  ],\r\n  declarations: [ContactsComponent]\r\n})\r\n\r\nexport class ContactModule {}","module.exports = \"\"","module.exports = \"<p>\\n  dynamic-form works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.css']\n})\nexport class DynamicFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { IpService } from './ip.service';\r\n\r\n@Component({\r\n  selector: 'app-ip',\r\n  template: '<h3>{{requestFromIp}}</h3>',\r\n  // providers: [IpService] // vi đa khai bao o app.module.ts nen ko khai bao ơ day\r\n})\r\nexport class IpComponent implements OnInit{\r\n  requestFromIp: String;\r\n  constructor(private ipService: IpService){}\r\n  ngOnInit(): void {\r\n    this.ipService.getIp()\r\n    .then(ip => this.requestFromIp = ip)\r\n    .catch(err => console.log(err));\r\n  }\r\n \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n// import 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\n\r\nexport class IpService{\r\n    constructor(private http: Http){}\r\n\r\n    getIp(){\r\n      return this.http.get('http://ip.jsontest.com/')\r\n      .toPromise()\r\n      .then(res => res.json())\r\n      .then(resJson => resJson.ip )\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<ng-container *ngFor=\\\"let person of arrPersons\\\">\\n  <app-person \\n    [name]=\\\"person.name\\\" \\n    [age]=\\\"person.age\\\"\\n    (removeByName)=\\\"remove($event)\\\"  \\n  ></app-person>\\n</ng-container>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-person',\n  templateUrl: './list-person.component.html',\n  styleUrls: ['./list-person.component.css']\n})\nexport class ListPersonComponent implements OnInit {\n\n  constructor() { }\n  arrPersons = [\n    {name: 'Trung', age: '22'},\n    {name: 'Thu', age: '20'},\n    {name: 'Hieu', age: '12'},\n    {name: 'Quynh Anh', age: '10'},\n    {name: 'Minh', age: '2'}\n  ]\n  ngOnInit() {\n  }\n\n  remove(name: string){\n    const index = this.arrPersons.findIndex(e => e.name === name);\n    this.arrPersons.splice(index, 1);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  page-notfound works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-notfound',\n  templateUrl: './page-notfound.component.html',\n  styleUrls: ['./page-notfound.component.css']\n})\nexport class PageNotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-parent',\r\n  template: `\r\n    <h3>{{ value }}</h3>\r\n    <app-child (myClick)=\"changeValue($event)\"></app-child>\r\n  `\r\n})\r\nexport class ParentComponent{\r\n  value = 0;\r\n  changeValue(isAdd: boolean){\r\n    if (isAdd) {\r\n      this.value = this.value + 1;\r\n    } else {\r\n      this.value = this.value - 1;\r\n    }\r\n  }\r\n}","import { Component, ViewChild } from '@angular/core';\r\nimport { Child1Component } from './child1.component';\r\n@Component({\r\n  selector: 'app-parent1',\r\n  template: `\r\n     <button (click)=\"onAddForChild()\">Add for child</button>\r\n     <app-child1></app-child1>\r\n  `\r\n  // <button (click)=\"child.value = child.value +1\">Add for child</button>\r\n  // <app-child1 #child></app-child1>\r\n})\r\nexport class Parent1Component{\r\n  @ViewChild(Child1Component)\r\n  myChild: Child1Component;\r\n\r\n  onAddForChild(){\r\n    this.myChild.value++;\r\n  }\r\n}","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-3 col-sm-3 offset-md-4 col-md-3 col-lg-3\\\" [ngStyle]=\\\"{ marginBottom: '20px'}\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title\\\">Name: {{ name }}</h4>\\n        <p class=\\\"card-text\\\">Age: {{ age }}</p>       \\n        <button type=\\\"button\\\" (click)=\\\"removePerson()\\\" class=\\\"btn btn-danger\\\">Xóa</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-person',\n  templateUrl: './person.component.html',\n  styleUrls: ['./person.component.css']\n})\nexport class PersonComponent implements OnInit {\n\n  constructor() { }\n  @Input() name: string;\n  @Input() age: Number;\n  @Output() removeByName = new EventEmitter<string>();\n  ngOnInit() {\n  }\n  removePerson(){\n    this.removeByName.emit(this.name);\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4 offset-md-4\\\">\\r\\n    <form (ngSubmit)=\\\"onSignIn(formSignIn)\\\" #formSignIn=\\\"ngForm\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"\\\">Email</label>\\r\\n        <input class=\\\"form-control\\\" [ngClass]=\\\"(txtEmail.touched && (txtEmail.errors?.required ||  txtEmail.errors?.email))?'is-invalid':'is-valid'\\\"\\r\\n          name=\\\"email\\\" placeholder=\\\"Input email\\\" ngModel #txtEmail=\\\"ngModel\\\" required email>\\r\\n        <div *ngIf=\\\"txtEmail.touched && txtEmail.errors?.required\\\" class=\\\"invalidInput\\\">\\r\\n          <p>\\r\\n            Email is empty\\r\\n          </p>\\r\\n        </div>\\r\\n\\r\\n        <p *ngIf=\\\"txtEmail.touched && txtEmail.errors?.email\\\" class=\\\"invalidInput\\\">\\r\\n          Email is not valid\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"\\\">Password</label>\\r\\n        <input \\r\\n          type=\\\"password\\\" \\r\\n          class=\\\"form-control\\\" \\r\\n          name=\\\"password\\\" \\r\\n          placeholder=\\\"Input password\\\" \\r\\n          ngModel \\r\\n          #txtPassword=\\\"ngModel\\\"  \\r\\n          [ngClass]=\\\"(txtPassword.touched && (txtPassword.errors?.required || txtPassword.errors?.minlength))?'is-invalid':''\\\"\\r\\n          required \\r\\n          minlength=\\\"8\\\" \\r\\n          maxlength=\\\"20\\\"\\r\\n          pattern=\\\"[a-z]*\\\"\\r\\n        >\\r\\n        <div *ngIf=\\\"(txtPassword.dirty || txtPassword.touched) && txtPassword.errors?.required\\\">\\r\\n          <p class=\\\"invalidInput\\\">\\r\\n            Password is empty\\r\\n          </p>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"(txtPassword.dirty || txtPassword.touched) && txtPassword.errors?.minlength\\\" class=\\\"invalidInput\\\">\\r\\n          <p>\\r\\n            Password must be at least 8 character long and max 20\\r\\n          </p>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"(txtPassword.dirty || txtPassword.touched) && txtPassword.errors?.pattern\\\" class=\\\"invalidInput\\\">\\r\\n          <p>\\r\\n            character a - z\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div class=\\\"checkbox\\\" ngModelGroup=\\\"checkForm\\\">\\r\\n        <label><input type=\\\"checkbox\\\" name=\\\"ReactJS\\\" [ngModel]=\\\"false\\\">ReactJS</label> &nbsp;\\r\\n        <label><input type=\\\"checkbox\\\" name=\\\"Angular\\\" [ngModel]=\\\"false\\\">Angular</label> &nbsp;\\r\\n        <label><input type=\\\"checkbox\\\" name=\\\"PHP\\\" [ngModel]=\\\"false\\\">PHP</label> &nbsp;\\r\\n        <label><input type=\\\"checkbox\\\" name=\\\"JQuery\\\" [ngModel]=\\\"false\\\">JQuery</label>\\r\\n      </div>\\r\\n      \\r\\n      <p>{{ txtPassword.errors | json}}</p>\\r\\n      <!-- <p>{{ formSignIn.value | json}}</p> -->\\r\\n      <button class=\\\"btn btn-success\\\" [disabled]=\\\"formSignIn.invalid\\\">Sign In</button>\\r\\n      <!-- // [disabled]=\\\"formSignIn.invalid\\\" -->\\r\\n    </form>\\r\\n    <button (click)=\\\"sendPost()\\\" class=\\\"btn btn-success\\\">Post</button>\\r\\n  </div>\\r\\n  \\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport {SignInService } from './sign-in.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  providers: [SignInService]\r\n})\r\nexport class SignInComponent{\r\n  data = {'email': 'trung111111@gmail.com', 'password': '111111111'};\r\n  constructor(private signInService: SignInService) { }\r\n  sendPost(){\r\n    this.signInService.postSignIn(this.data)\r\n    .subscribe(res => console.log(res));\r\n  }\r\n  onSignIn(formSignIn){\r\n    console.log(formSignIn);\r\n    // throw new Error('form is invalid');\r\n    // [disabled]=\"formSignIn.invalid\"\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable()\r\n\r\nexport class SignInService{\r\n  constructor(private http:HttpClient){}\r\n  postSignIn(value): Observable<any>{\r\n    const url = \"https://herokutuan.herokuapp.com/auth\";\r\n    return this.http.post(url, value);\r\n  }\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<!-- main app container -->\\n<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 offset-md-3\\\">\\n        <h2>Angular 6 Reactive Form Validation</h2>\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>First Name</label>\\n            <input \\n              type=\\\"text\\\" \\n              formControlName=\\\"firstName\\\" \\n              class=\\\"form-control\\\" \\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors, 'is-valid': submitted && f.firstName.valid}\\\"\\n            />\\n            <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required</div>\\n              <div *ngIf=\\\"f.firstName.errors.minlength\\\">First Name must be at least 8 charactors</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Last Name</label>\\n            <input \\n              type=\\\"text\\\" \\n              formControlName=\\\"lastName\\\" \\n              class=\\\"form-control\\\" \\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors, 'is-valid': submitted && f.firstName.valid }\\\"\\n            />\\n            <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input \\n              type=\\\"text\\\" \\n              formControlName=\\\"email\\\" \\n              class=\\\"form-control\\\" \\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors, 'is-valid': submitted && f.firstName.valid }\\\"\\n            />\\n            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n              <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input \\n              type=\\\"password\\\" \\n              formControlName=\\\"password\\\" \\n              class=\\\"form-control\\\" \\n              [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors, 'is-valid': submitted && f.firstName.valid }\\\"\\n            />\\n            <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n              <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 8 characters</div>\\n              <div *ngIf=\\\"f.password.errors.maxlength\\\">Password must be at greater 20 characters</div>\\n              <div *ngIf=\\\"f.password.errors.pattern\\\">You must input a - z</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-primary\\\">Register</button>\\n            <!-- [disabled]=\\\"registerForm.invalid\\\" -->\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup , Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted = false;\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n        firstName: ['', [Validators.required, Validators.minLength(8)] ],\n        lastName: ['', Validators.required],\n        email: ['',[ Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20), Validators.pattern(\"[a-z]*\")]]\n    });\n  }\n   // convenience getter for easy access to form fields\n   get f() { return this.registerForm.controls; }\n   onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n    console.log(this.f);\n    alert(\"Thành công\");\n    \n}\n}\n","module.exports = \"\"","module.exports = \"<p *ngIf=\\\"isShow\\\">\\n  structure works!\\n</p>\\n<ul>\\n  <li *ngFor=\\\"let subject of arrSubject\\\">\\n    <p>{{ subject }}</p>\\n  </li>\\n</ul>\\n<button type=\\\"button\\\" (click)=\\\"toggleIf()\\\" class=\\\"btn btn-info\\\">Toggle</button>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-structure',\n  templateUrl: './structure.component.html',\n  styleUrls: ['./structure.component.css']\n})\nexport class StructureComponent implements OnInit {\n\n  constructor() { }\n\n  isShow = true;\n  arrSubject = ['Angular', 'PHP', 'React'];\n  ngOnInit() {\n  }\n\n  toggleIf() {\n    this.isShow = !this.isShow;\n  }\n}\n","module.exports = \".circle{\\r\\n  width: 50px;\\r\\n  height: 50px;\\r\\n  border-radius: 25px;\\r\\n  background-color: red;\\r\\n}\\r\\n.square{\\r\\n  width: 50px;\\r\\n  height: 50px;\\r\\n  background-color: blueviolet;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"\\\">Nhập tên</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" required=\\\"required\\\" placeholder=\\\"Username\\\" [(ngModel)] = \\\"name\\\" #txtUsername>\\n    </div>\\n    <h3 [ngStyle]=\\\"name.length % 2===0? evenText : oddText\\\">My name is {{ name }}</h3>   \\n    <button type=\\\"button\\\" (click)=\\\"toggleHighLight()\\\" class=\\\"btn btn-success\\\">ToggleHighLight</button>\\n    <br>\\n    <code>{{ txtUsername.value | json }}</code>\\n    <div [class]=\\\"isHighLight ? 'circle': 'square'\\\"></div>\\n    <br>\\n     <!-- nếu chỗ này mà đưa vào .ts thì khi đảo status của isHighLight thì nó ko cập nhất -->\\n    <div [ngClass]=\\\"{ circle: !isHighLight, square: isHighLight }\\\"></div>\\n  </div>\\n</div>  \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent implements OnInit {\n  \n  name = 'Trung';\n  evenText = { color: 'red', fontSize: '40px'};\n  oddText = { color: 'blue', fontSize: '20px'};\n  isHighLight = true;\n  // currentClass = { circle: !this.isHighLight, square: this.isHighLight };\n  constructor() { }\n\n  ngOnInit() {\n  }\n  /***\n   * Dùng (keyup) de lay gia tri input (keyup)=\"showEvent($event)\"\n      showEvent(event){\n        this.name = event.target.value;\n      }\n  */\n  toggleHighLight(){\n    this.isHighLight = !this.isHighLight;\n  }\n  \n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 offset-md-4 col-lg-4\\\">\\n        <div class=\\\"card border-link text-center\\\">\\n          <img class=\\\"card-img-top img-responsive\\\" src=\\\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRdp7Z4bBtBxD_rm_wd8XrXswtmGPrb-XwbWPMZ8VP6HXDlcbIA\\\" alt=\\\"\\\">\\n          <div class=\\\"card-body\\\">\\n            <div [hidden]=\\\"!isLoading\\\">\\n                <i class=\\\"fa fa-spinner\\\"></i>\\n            </div>\\n            <div [hidden]=\\\"isLoading\\\">\\n                <h4 class=\\\"card-title\\\">{{ cityName === '' ? 'CityName': cityName | uppercase}}</h4>\\n                <p class=\\\"card-text\\\">{{ cityName === ''? 'Temp ': temp }} &deg;C</p>\\n                <p class=\\\"card-text\\\">{{ cityName === ''? 'windSpeed': windSpeed }} km/h</p>\\n            </div>\\n          </div>\\n        </div>\\n        <div [ngStyle]=\\\"{marginTop: '20px'}\\\">\\n            <label for=\\\"\\\">Nhập tên thành phố của bạn</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"enter city name\\\" [(ngModel)]=\\\"txtCityName\\\">\\n            <br>\\n            <button type=\\\"button\\\" (click)=\\\"getWeather()\\\" class=\\\"btn btn-success\\\">Get Weather</button>\\n            \\n        </div>\\n        \\n    </div>\\n  </div>\\n  \\n</div> \\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from './weather.service';\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css'],\n  providers: [WeatherService]\n})\nexport class WeatherComponent implements OnInit {\n\n  txtCityName = '';\n  cityName ='';\n  temp = null;\n  windSpeed = null;\n  isLoading = false;\n  constructor(private weatherService: WeatherService) { }\n\n  ngOnInit() {}\n\n  // getWeather(){\n  //   this.isLoading = true;\n  //   this.weatherService.getTemp(this.txtCityName)\n  //   .then(data => {\n  //     this.cityName = data.name;\n  //     this.temp = data.main.temp;\n  //     this.windSpeed = data.wind.speed;\n  //     this.isLoading = false;\n  //     this.txtCityName ='';\n  //   })\n  //   .catch(err => {\n  //     alert('Cannot your city name!');\n  //     this.isLoading = false;\n  //     this.txtCityName ='';\n  //   });\n  getWeather(){\n    this.isLoading = true;\n    this.weatherService.getTemp(this.txtCityName)\n      .subscribe(data => {\n        // console.log(data.name);\n        this.cityName = data.name;\n        this.temp = data.main.temp;\n        this.windSpeed = data.wind.speed;\n        this.isLoading = false;\n        this.txtCityName ='';\n      }, err => {\n        // alert('Cannot your city name!');\n        this.isLoading = false;\n        this.txtCityName ='';\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n// import 'rxjs/add/operator/retry';\r\n\r\n@Injectable()\r\n\r\nexport class WeatherService{\r\n  constructor(private http: HttpClient){}\r\n  //Observable bất đồng bộ trong khi lấy dữ liệu, đợi trả dữ liệu thì có thể làm các việc khác\r\n  //co the tao 1 class de lay du lieu , Observable<tenclass đó> interface tenClass{ ddingj nghõa trườn cần lấy ở đây}\r\n  getTemp(nameCity: string): Observable<any>{\r\n    const url =\"http://api.openweathermap.org/data/2.5/weather?appid=e873cb3f55d6f7871644ccefc558aee7&units=metric&q=\"+ nameCity;\r\n    // return this.http.get(url, { observe: 'response' })\r\n    return this.http.get(url);\r\n  }\r\n}","module.exports = \"h3{\\r\\n  font-size: 20px;\\r\\n  color: aqua;\\r\\n}\"","module.exports = \"<p [hidden] = \\\"forgot\\\">{{ en }}</p>\\r\\n<p>{{ vn }}</p>\\r\\n<img [src]=\\\"imageUrl\\\" alt=\\\"\\\">\\r\\n<button (click)=\\\"toggleForgot()\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">Toggle Forgot status</button>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  // template: '<h3>My name is Trung</h3>',\r\n  templateUrl: './word.component.html',\r\n  styleUrls: ['./word.component.css'],\r\n  selector: 'app-word'\r\n})\r\n\r\nexport class WordComponent{\r\n  en = 'Hello' ;\r\n  vn = 'Xin Chào';\r\n  imageUrl = 'https://angular.io/assets/images/logos/angular/logo-nav@2x.png';\r\n  forgot= false;\r\n\r\n  toggleForgot(){\r\n    this.forgot = !this.forgot;\r\n  }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  \\n  <div class=\\\"row\\\" [ngStyle]=\\\"{marginTop: '20px', marginBottom: '20px'}\\\">\\n    <div class=\\\"col-xs-4 offset-md-4 col-sm-4 col-md-4 col-lg-4\\\" *ngIf=\\\"isShowForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"\\\">Nhập từ vựng mới</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"English\\\" [(ngModel)]=\\\"newEn\\\">\\n        <br>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Vietnamese\\\" [(ngModel)]=\\\"newVn\\\">\\n        <br>\\n        <button type=\\\"button\\\" (click)=\\\"addNewWord()\\\" class=\\\"btn btn-success\\\">Thêm</button>\\n      </div>\\n    </div>\\n    <button type=\\\"button\\\" (click)=\\\"isShowForm = true\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"!isShowForm\\\">Thêm</button>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"\\\">Lọc theo</label>\\n      <select class=\\\"form-control\\\" [(ngModel)]=\\\"filterStatus\\\">\\n        <option value=\\\"XEM_TAT_CA\\\">Xem tất cả</option>\\n        <option value=\\\"XEM_TU_DA_NHO\\\">Xem các từ đã nhớ</option>\\n        <option value=\\\"XEM_TU_CHUA_NHO\\\">Xem các từ chưa nhớ</option>\\n      </select>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let word of arrWords\\\" class=\\\"col-xs-6 col-sm-6 col-md-4 col-lg-3 text-center\\\">\\n      <div class=\\\"card border-link\\\" [ngStyle]=\\\"{marginBottom: '15px'}\\\" *ngIf=\\\"filters(word.memorized)\\\">\\n        <img class=\\\"card-img-top img-responsive\\\" [src]=\\\"imageUrl\\\" alt=\\\"\\\">\\n        <div class=\\\"card-body\\\">\\n          <h4 class=\\\"card-title\\\" [ngStyle]=\\\"{color: word.memorized ? 'green' : 'red'}\\\">{{ word.en }}</h4>\\n          <p class=\\\"card-text\\\">{{ word.vn }}</p>\\n          <p>\\n            <button type=\\\"button\\\" (click)=\\\"toggleStatus(word.id)\\\" [class]=\\\"word.memorized?'btn btn-warning':'btn btn-success'\\\">{{ word.memorized ? 'Chưa thuộc' : 'Đã thuộc'}}</button> \\n            &nbsp;\\n            <button type=\\\"button\\\" (click)=\\\"deleteWord(word.id)\\\" class=\\\"btn btn-danger\\\">Xóa</button>  \\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-words',\n  templateUrl: './words.component.html',\n  styleUrls: ['./words.component.css']\n})\nexport class WordsComponent implements OnInit {\n\n  constructor() { }\n  filterStatus = 'XEM_TAT_CA';\n  newEn = '';\n  newVn = '';\n  isShowForm = false;\n  arrWords = [\n    { id: 1, en: 'action', vn: 'hành động', memorized: true },\n    { id: 2, en: 'actor', vn: 'diễn viên', memorized: false },\n    { id: 3, en: 'activity', vn: 'hoạt động', memorized: true },\n    { id: 4, en: 'active', vn: 'chủ động', memorized: true },\n    { id: 5, en: 'bath', vn: 'tắm', memorized: false },\n    { id: 6, en: 'bedroom', vn: 'phòng ngủ', memorized: true }\n  ];\n  imageUrl = \"http://adong.com.vn/assets/library/images/giuongngugo.jpg\";\n\n  ngOnInit() {\n  }\n\n  toggleStatus(idReceive){\n      for(let i=0; i< this.arrWords.length; i++){\n        if(this.arrWords[i].id === idReceive){\n          this.arrWords[i].memorized = !this.arrWords[i].memorized;\n        }\n      } \n  }\n\n  addNewWord(){\n    this.arrWords.unshift({\n      id: this.arrWords.length + 1,\n      en: this.newEn,\n      vn: this.newVn,\n      memorized: false\n    });\n    this.newEn = '';\n    this.newVn = '';\n    this.isShowForm = false;\n  }\n\n  deleteWord(idDelete){\n    // for(let i=0; i< this.arrWords.length; i++){\n    //   if(this.arrWords[i].id === idDelete){\n    //     this.arrWords.splice(i,1);\n    //   }\n    // } \n    // Cách 2 dùng hàm findIndex() của JS\n    const index = this.arrWords.findIndex(word => word.id === idDelete);\n    this.arrWords.splice(index, 1);\n\n  }\n  filters(memorized: boolean){\n    const xemTatCa = this.filterStatus === 'XEM_TAT_CA';\n    const xemDaNho = this.filterStatus === 'XEM_TU_DA_NHO' && memorized;\n    const xemChuaNho = this.filterStatus === 'XEM_TU_CHUA_NHO' && !memorized;\n    return xemTatCa || xemDaNho || xemChuaNho;\n  }\n \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}